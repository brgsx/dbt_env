{"results": [{"node": {"raw_sql": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n{{ config(materialized='table') }}\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null", "compiled": true, "database": "pythonanalytics-164622", "schema": "dbt_brgs", "fqn": ["dbt_env_test", "example", "my_first_dbt_model"], "unique_id": "model.dbt_env_test.my_first_dbt_model", "package_name": "dbt_env_test", "root_path": "/home/brgs/Documentos/dbt-env/dbt-tutorial", "path": "example/my_first_dbt_model.sql", "original_file_path": "models/example/my_first_dbt_model.sql", "name": "my_first_dbt_model", "resource_type": "model", "alias": "my_first_dbt_model", "checksum": {"name": "sha256", "checksum": "842251f5ed1d97920d3748d9686b8c05a3a0071ec7990f948f36796491788aed"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs"], "nodes": []}, "description": "A starter dbt model", "columns": {"id": {"name": "id", "description": "The primary key for this table", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/example/schema.yml", "build_path": "target/run/dbt_env_test/models/example/my_first_dbt_model.sql", "deferred": false, "compiled_sql": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null"}, "error": null, "status": "CREATE TABLE (2.0 rows, 0.0 Bytes processed)", "execution_time": 3.7920501232147217, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-15T15:20:29.689745Z", "completed_at": "2020-11-15T15:20:29.702612Z"}, {"name": "execute", "started_at": "2020-11-15T15:20:29.702858Z", "completed_at": "2020-11-15T15:20:33.481282Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "with customers as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name\n\n    from `dbt-tutorial`.jaffle_shop.customers\n\n),\n\norders as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from `dbt-tutorial`.jaffle_shop.orders\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders\n\n    from orders\n\n    group by 1\n\n),\n\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from final", "compiled": true, "database": "pythonanalytics-164622", "schema": "dbt_brgs", "fqn": ["dbt_env_test", "customers"], "unique_id": "model.dbt_env_test.customers", "package_name": "dbt_env_test", "root_path": "/home/brgs/Documentos/dbt-env/dbt-tutorial", "path": "customers.sql", "original_file_path": "models/customers.sql", "name": "customers", "resource_type": "model", "alias": "customers", "checksum": {"name": "sha256", "checksum": "0f5c43a1de40b1db8d0edc73f688c60c40bf1b015b2903e644ccf508c53dfb68"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/dbt_env_test/models/customers.sql", "deferred": false, "compiled_sql": "with customers as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name\n\n    from `dbt-tutorial`.jaffle_shop.customers\n\n),\n\norders as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from `dbt-tutorial`.jaffle_shop.orders\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders\n\n    from orders\n\n    group by 1\n\n),\n\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "with customers as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name\n\n    from `dbt-tutorial`.jaffle_shop.customers\n\n),\n\norders as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from `dbt-tutorial`.jaffle_shop.orders\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders\n\n    from orders\n\n    group by 1\n\n),\n\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from final"}, "error": null, "status": "CREATE VIEW", "execution_time": 1.5300943851470947, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-15T15:20:33.483572Z", "completed_at": "2020-11-15T15:20:33.487806Z"}, {"name": "execute", "started_at": "2020-11-15T15:20:33.487995Z", "completed_at": "2020-11-15T15:20:35.013136Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH base AS (SELECT \n  DATE_TRUNC(CAST(datehour AS date), MONTH) AS month, \n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(1)] IN (\"municipal\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(1)] END AS part1,\n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(2)] IN (\"de\",\"do\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(2)] END AS part2,\n  SPLIT(title, \"_\")[SAFE_OFFSET(3)] AS part3,\n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(4)] IN (\"2020\",\"em\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(4)] END AS part4,\n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(5)] IN (\"2020\",\"em\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(5)] END AS part5,\n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(6)] IN (\"2020\",\"em\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(6)] END AS part6,\n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(7)] IN (\"2020\",\"em\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(7)] END AS part7,\n  SUM(views) AS total_views\nFROM `bigquery-public-data.wikipedia.pageviews_*` \nWHERE DATE(datehour) >= \"2020-11-01\" \nAND  LOWER(title) LIKE \"%elei\u00e7\u00e3o%\" \nAND LOWER(title) \nLIKE \"%municipal%\" \nAND title LIKE \"%2020%\"\nGROUP BY \n   1\n  ,2\n  ,3\n  ,4\n  ,5\n  ,6\n  ,7\n  ,8\nORDER BY \n1\n,total_views DESC)\n\nSELECT \nARRAY_TO_STRING([part1,part2,part3,part4,part5,part6,part7], ' ') AS citys,\nSUM(total_views) total_views\nFROM base \nGROUP BY 1\nORDER BY 2 DESC", "compiled": true, "database": "pythonanalytics-164622", "schema": "dbt_brgs", "fqn": ["dbt_env_test", "eleicoes", "wiki_eleicao"], "unique_id": "model.dbt_env_test.wiki_eleicao", "package_name": "dbt_env_test", "root_path": "/home/brgs/Documentos/dbt-env/dbt-tutorial", "path": "eleicoes/wiki_eleicao.sql", "original_file_path": "models/eleicoes/wiki_eleicao.sql", "name": "wiki_eleicao", "resource_type": "model", "alias": "wiki_eleicao", "checksum": {"name": "sha256", "checksum": "051c45ff4611fbaa0241b8432f13570180c2994c3638418c0e7d61410a1d2e92"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs"], "nodes": []}, "description": "wiki_eleicao description", "columns": {"city": {"name": "city", "description": "wiki_eleicao city", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_views": {"name": "total_views", "description": "wiki_eleicao city", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/eleicoes/schema.yml", "build_path": "target/run/dbt_env_test/models/eleicoes/wiki_eleicao.sql", "deferred": false, "compiled_sql": "\n\nWITH base AS (SELECT \n  DATE_TRUNC(CAST(datehour AS date), MONTH) AS month, \n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(1)] IN (\"municipal\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(1)] END AS part1,\n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(2)] IN (\"de\",\"do\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(2)] END AS part2,\n  SPLIT(title, \"_\")[SAFE_OFFSET(3)] AS part3,\n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(4)] IN (\"2020\",\"em\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(4)] END AS part4,\n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(5)] IN (\"2020\",\"em\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(5)] END AS part5,\n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(6)] IN (\"2020\",\"em\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(6)] END AS part6,\n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(7)] IN (\"2020\",\"em\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(7)] END AS part7,\n  SUM(views) AS total_views\nFROM `bigquery-public-data.wikipedia.pageviews_*` \nWHERE DATE(datehour) >= \"2020-11-01\" \nAND  LOWER(title) LIKE \"%elei\u00e7\u00e3o%\" \nAND LOWER(title) \nLIKE \"%municipal%\" \nAND title LIKE \"%2020%\"\nGROUP BY \n   1\n  ,2\n  ,3\n  ,4\n  ,5\n  ,6\n  ,7\n  ,8\nORDER BY \n1\n,total_views DESC)\n\nSELECT \nARRAY_TO_STRING([part1,part2,part3,part4,part5,part6,part7], ' ') AS citys,\nSUM(total_views) total_views\nFROM base \nGROUP BY 1\nORDER BY 2 DESC", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nWITH base AS (SELECT \n  DATE_TRUNC(CAST(datehour AS date), MONTH) AS month, \n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(1)] IN (\"municipal\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(1)] END AS part1,\n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(2)] IN (\"de\",\"do\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(2)] END AS part2,\n  SPLIT(title, \"_\")[SAFE_OFFSET(3)] AS part3,\n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(4)] IN (\"2020\",\"em\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(4)] END AS part4,\n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(5)] IN (\"2020\",\"em\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(5)] END AS part5,\n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(6)] IN (\"2020\",\"em\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(6)] END AS part6,\n  CASE WHEN SPLIT(title, \"_\")[SAFE_OFFSET(7)] IN (\"2020\",\"em\") THEN null ELSE SPLIT(title, \"_\")[SAFE_OFFSET(7)] END AS part7,\n  SUM(views) AS total_views\nFROM `bigquery-public-data.wikipedia.pageviews_*` \nWHERE DATE(datehour) >= \"2020-11-01\" \nAND  LOWER(title) LIKE \"%elei\u00e7\u00e3o%\" \nAND LOWER(title) \nLIKE \"%municipal%\" \nAND title LIKE \"%2020%\"\nGROUP BY \n   1\n  ,2\n  ,3\n  ,4\n  ,5\n  ,6\n  ,7\n  ,8\nORDER BY \n1\n,total_views DESC)\n\nSELECT \nARRAY_TO_STRING([part1,part2,part3,part4,part5,part6,part7], ' ') AS citys,\nSUM(total_views) total_views\nFROM base \nGROUP BY 1\nORDER BY 2 DESC"}, "error": null, "status": "CREATE TABLE (135.0 rows, 77.9 GB processed)", "execution_time": 7.580217599868774, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-15T15:20:35.015744Z", "completed_at": "2020-11-15T15:20:35.020922Z"}, {"name": "execute", "started_at": "2020-11-15T15:20:35.021144Z", "completed_at": "2020-11-15T15:20:42.594430Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "-- Use the `ref` function to select from other models\n\nselect *\nfrom {{ ref('my_first_dbt_model') }}\nwhere id = 1", "compiled": true, "database": "pythonanalytics-164622", "schema": "dbt_brgs", "fqn": ["dbt_env_test", "example", "my_second_dbt_model"], "unique_id": "model.dbt_env_test.my_second_dbt_model", "package_name": "dbt_env_test", "root_path": "/home/brgs/Documentos/dbt-env/dbt-tutorial", "path": "example/my_second_dbt_model.sql", "original_file_path": "models/example/my_second_dbt_model.sql", "name": "my_second_dbt_model", "resource_type": "model", "alias": "my_second_dbt_model", "checksum": {"name": "sha256", "checksum": "b3aa346f283f3c9c9a75936f3b80d2572ca9ab39aee4c02b30553d3fe2ba5692"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["my_first_dbt_model"]], "sources": [], "depends_on": {"macros": ["macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.dbt_env_test.my_first_dbt_model"]}, "description": "A starter dbt model", "columns": {"id": {"name": "id", "description": "The primary key for this table", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/example/schema.yml", "build_path": "target/run/dbt_env_test/models/example/my_second_dbt_model.sql", "deferred": false, "compiled_sql": "-- Use the `ref` function to select from other models\n\nselect *\nfrom `pythonanalytics-164622`.`dbt_brgs`.`my_first_dbt_model`\nwhere id = 1", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- Use the `ref` function to select from other models\n\nselect *\nfrom `pythonanalytics-164622`.`dbt_brgs`.`my_first_dbt_model`\nwhere id = 1"}, "error": null, "status": "CREATE VIEW", "execution_time": 1.969160795211792, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-11-15T15:20:42.604920Z", "completed_at": "2020-11-15T15:20:42.623192Z"}, {"name": "execute", "started_at": "2020-11-15T15:20:42.623542Z", "completed_at": "2020-11-15T15:20:44.571765Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-11-15T15:20:44.582684Z", "elapsed_time": 16.46182894706726}